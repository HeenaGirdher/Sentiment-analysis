# -*- coding: utf-8 -*-
"""app

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cU16QDuVfWWszQwGZNymSmtLKFarKuG6
"""

from flask import Flask,render_template,url_for,request
import pandas as pd 
import pickle
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
import joblib
import pickle
from flask import Flask,render_template,url_for,request
import pandas as pd 
import pickle
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB

# load the model from disk
filename = 'nlp_model.pkl'
DT = pickle.load(open(filename,'rb'))
tfidf=pickle.load(open('transform.pkl','rb'))
app = Flask(__name__)

@app.route('/')
def home():
	return render_template('home.html')

@app.route('/main')
def index_func():
    return render_template('main.html')

@app.route('/home')
def index_func1():
    return render_template('home.html')

@app.route('/Predict',methods=['POST'])
def predict():
	if request.method=='POST':
		message = request.form['message']
		data = [message]
		vect = tfidf.transform(data).toarray()
		my_prediction = DT.predict(vect)
	
	return render_template('result.html',prediction = my_prediction[0])

if __name__ == '__main__':
	app.run(debug=True)
